// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model group {
  id      String    @id @default(uuid())
  number  BigInt    @default(autoincrement())
  modules modules[]
  users   users[]
}

model modules {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())

  group   group  @relation(fields: [groupId], references: [id])
  groupId String

  sprint        sprint[]
  users_modules users_modules[]
}

model sprint {
  id        String   @id @default(uuid())
  name      String
  modules   modules  @relation(fields: [modulesId], references: [id])
  modulesId String
  videos    videos[]
}

model users {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  isAdmin   Boolean  @default(false)
  role      Role     @default(STUDENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  group         group           @relation(fields: [groupId], references: [id])
  groupId       String
  users_modules users_modules[]
}

model users_modules {
  id        String   @id @default(uuid())
  user      users    @relation(fields: [usersId], references: [id])
  usersId   String
  module    modules  @relation(fields: [modulesId], references: [id])
  modulesId String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model videos {
  id          String   @id @default(uuid())
  title       String
  url         String
  releaseDate DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  sprint   sprint @relation(fields: [sprintId], references: [id])
  sprintId String

  video_marker video_marker[]
}

model video_marker {
  id        String   @id @default(uuid())
  time      String
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  videos   videos @relation(fields: [videosId], references: [id], onDelete: Cascade)
  videosId String
}

enum Role {
  STUDENT
  ADM
  INSTRUCTOR
}
