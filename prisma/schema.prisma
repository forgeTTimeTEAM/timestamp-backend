// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model groups {
  id     String @id @default(uuid())
  number Int    @default(autoincrement())

  modules modules[]
  users   users[]
}

model modules {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())

  group   groups @relation(fields: [groupId], references: [id])
  groupId String

  sprints       sprints[]
  users_modules users_modules[]
}

model sprints {
  id   String @id @default(uuid())
  name String

  module   modules @relation(fields: [moduleId], references: [id])
  moduleId String

  videos videos[]
}

model users {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(STUDENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  group     groups? @relation(fields: [groupId], references: [id])
  groupId   String?
  modules   users_modules[]
}

model users_modules {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   users  @relation(fields: [userId], references: [id])
  userId String

  module   modules @relation(fields: [moduleId], references: [id])
  moduleId String
}

model videos {
  id          String   @id @default(uuid())
  title       String
  url         String?
  releaseDate DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  sprint   sprints @relation(fields: [sprintId], references: [id])
  sprintId String

  video_markers video_markers[]
}

model video_markers {
  id        String   @id @default(uuid())
  time      String
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  video   videos @relation(fields: [videoId], references: [id], onDelete: Cascade)
  videoId String
}

enum Role {
  STUDENT
  ADM
  INSTRUCTOR
}
